first made index.html to test through console. npm install and test was returning passed all the time and since we have been taught not to use
external libraries while working on the course I wasnt sure what to do about it but wanted to proceed with the task.

started with code to handle type

function assertEquals(expect, actual) {
    if(typeof expect !== typeof actual){
        console.log(`Expected type ${typeof expect} but found type ${typeof actual}`);
    }
}
assertEquals(1, '1');


Next Put in actual error throwing and a catch to log it then added code to compare the values of simple strings and numbers

function assertEquals(expect, actual) {
   try { if(typeof expect !== typeof actual){
        throw new Error(`Expected type ${typeof expect} but found type ${typeof actual}`);
    }
    else{
if(expect !== actual){
    throw new Error(`Expected ${expect} but found ${actual}`);
}
    }
}
    catch (error) {
        // Handle the error
        console.error("error:", error.message);
      }
}
// test for detecting unequal type 
// assertEquals(1, '1');

// test for detecting unequal strings or numbers
// assertEquals(1,2);
// assertEquals('USA', 'UK');




------------------------------------------------------------------
Finilazed functionality with array length and array content tests
------------------------------------------------------------------


function assertEquals(expect, actual) {
   try { if(typeof expect !== typeof actual){
        throw new Error(`Expected type ${typeof expect} but found type ${typeof actual}`);
    }
    else{
        if(Array.isArray(expect) === true && expect.length !== actual.length){
        throw new Error(`Expected array length ${expect.length} but found ${actual.length}`);
        }
        else{
            if(Array.isArray(expect)){
                actual.forEach((element, index) => {
              if(element !== expect[index]){

                throw new Error(`Expected ${expect[index]} but found ${element}`);
              }       
                });
            }
if(expect !== actual){
    throw new Error(`Expected ${expect} but found ${actual}`);
}
    }
}
   }
    catch (error) {
        // Handle the error
        console.error("error:", error.message);
      }
}
// test for detecting unequal type 
// assertEquals(1, '1');

// test for detecting unequal strings or numbers
// assertEquals(1,2);
// assertEquals('USA', 'UK');

// test for array length difference
// assertEquals([1,1,1],[1,1,1,1,1])

// test for arrays with different values
// assertEquals(['a','d'], ['a','b']);




module.exports = assertEquals



------------------------------------------------
Made tests look nicer and run trough a function
------------------------------------------------


function assertEquals(expect, actual) {
  if(typeof expect !== typeof actual){
        throw new Error(`Expected type ${typeof expect} but found type ${typeof actual}`);
    }
    else{
        if(Array.isArray(expect) === true && expect.length !== actual.length){
        throw new Error(`Expected array length ${expect.length} but found ${actual.length}`);
        }
        else{
            if(Array.isArray(expect)){
                actual.forEach((element, index) => {
              if(element !== expect[index]){

                throw new Error(`Expected ${expect[index]} but found ${element}`);
              }       
                });
            }
            else{
if(expect !== actual){
    throw new Error(`Expected ${expect} but found ${actual}`);
}
            }
    }
}
   
  
}


function testAssertEqual(expectedError, var1, var2){
try {
    assertEquals(var1, var2);
    if(expectedError === 'no error'){
        console.log('Assert Equal Works');
    }
    else{
        console.log('unexpected result no error');
    }
} 

catch (error) {
 if( error.message === expectedError) {
console.log('Assert Equal Works');

 }  
 else{
    console.log(`Unexpected results ${error.message}`);
 }
}

};
testAssertEqual('no error', 'abc', 'abc');
testAssertEqual('Expected abcef but found abc', 'abcef', 'abc');
testAssertEqual('no error', 1, 1);
testAssertEqual('Expected 1 but found 2', 1, 2);
testAssertEqual('no error', ['a', 'b', 'c'], ['a', 'b', 'c']);
testAssertEqual('Expected array length 2 but found 3', ['a', 'b'], ['a', 'b', 'c']);
testAssertEqual('Expected b but found d', ['a', 'b'], ['a', 'd']);



module.exports = assertEquals
